import turtle
import random

# Initialisation du jeu
window = turtle.Screen()
window.title("Jeu de tir spatial")
window.bgcolor("black")
window.setup(width=600, height=600)
window.tracer(0)

# Ajout du vaisseau
ship = turtle.Turtle()
ship.color("white")
ship.shape("triangle")
ship.penup()
ship.speed(0)
ship.goto(0, -250)
ship.direction = "stop"

# Création des météores
meteors = []
for _ in range(10):
    meteor = turtle.Turtle()
    meteor.color("red")
    meteor.shape("circle")
    meteor.penup()
    meteor.speed(0)
    meteor.goto(random.randint(-250, 250), random.randint(200, 400))
    meteor.dy = random.randint(1, 3)
    meteors.append(meteor)

# Ajout des munitions
bullets = []
for _ in range(3):
    bullet = turtle.Turtle()
    bullet.color("blue")
    bullet.shape("triangle")
    bullet.penup()
    bullet.speed(0)
    bullet.goto(-300 + (_ * 50), 250)
    bullets.append(bullet)

# Ajout des soins
healing_kit = turtle.Turtle()
healing_kit.color("green")
healing_kit.shape("square")
healing_kit.penup()
healing_kit.speed(0)
healing_kit.goto(random.randint(-250, 250), random.randint(200, 400))
healing_kit.dy = 2

# Score
score = 0
score_display = turtle.Turtle()
score_display.hideturtle()
score_display.penup()
score_display.goto(0, 260)
score_display.color("white")
score_display.write(f"Score: {score}", align="center", font=("Courier", 24, "normal"))

# Vie
lives = 3
lives_display = turtle.Turtle()
lives_display.hideturtle()
lives_display.penup()
lives_display.goto(-280, 260)
lives_display.color("white")
lives_display.write(f"Vies: {lives}", align="left", font=("Courier", 24, "normal"))

# Définition des mouvements du vaisseau
def move_left():
    ship.direction = "left"

def move_right():
    ship.direction = "right"

def move_ship():
    if ship.direction == "left":
        x = ship.xcor()
        x -= 3
        if x < -280:
            x = -280
        ship.setx(x)

    elif ship.direction == "right":
        x = ship.xcor()
        x += 3
        if x > 280:
            x = 280
        ship.setx(x)

# Définition des mouvements des météores
def move_meteors():
    for meteor in meteors:
        y = meteor.ycor()
        y -= meteor.dy
        meteor.sety(y)

        # Réinitialisation du météore
        if y < -300:
            x = random.randint(-250, 250)
            y = random.randint(200, 400)
            meteor.goto(x, y)

        # Collision avec le vaisseau
        if meteor.distance(ship) < 20:
            global lives
            lives -= 1
            lives_display.clear()
            lives_display.write(f"Vies: {lives}", align="left", font=("Courier", 

